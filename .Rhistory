usethis::use_github()
usethis::use_github(https://github.com/MicahMayanja/TLFs)
library(rtables)
library(tern)
library(dplyr)
library(forcats)
# import data
adsl <- ex_adsl
adae <- ex_adae
adrs <- ex_adrs
vars <- c("AGE", "SEX")
vars_labels <- c("Age (yr)", "Sex")
# ensure both are character vectors
vars <- as.character(vars)
vars_labels <- as.character(vars_labels)
# reorder the levels in the ARM & SEX variable
adsl$ARM <- factor(adsl$ARM, levels = c("B: Placebo","A: Drug X","C: Combination"))
adsl$SEX <- factor(adsl$SEX, levels = c("M","F","U","UNDIFFERENTIATED"))
basic_table(show_colcounts = TRUE) %>%
split_cols_by("ARM") %>%
add_overall_col("All Patients") %>%
add_colcounts() %>%
analyze_vars(
vars = vars,
var_labels = vars_labels
#.stats = c("n","mean_sd","count"),
#.formats = c(mean_sd = "xx.xx (xx.xx)")
) %>%
build_table(adsl)
basic_table(show_colcounts = TRUE) %>%
split_cols_by("ARM") %>%
add_overall_col("All Patients") %>%
add_colcounts() %>%
analyze_vars(
vars = vars,
var_labels = vars_labels
#.stats = c("n","mean_sd","count"),
#.formats = c(mean_sd = "xx.xx (xx.xx)")
) %>%
build_table(adsl %>% dplyr::filter(COUNTRY == "CHN")) # country China
basic_table(show_colcounts = TRUE) %>%
split_cols_by("ARM") %>%
add_overall_col("All Patients") %>%
add_colcounts() %>%
analyze_vars(
vars = vars,
var_labels = vars_labels
stats = c("n","mean_sd","count"),
basic_table(show_colcounts = TRUE) %>%
split_cols_by("ARM") %>%
add_overall_col("All Patients") %>%
add_colcounts() %>%
analyze_vars(
vars = vars,
var_labels = vars_labels,
stats = c("n","mean_sd","count"),
formats = c(mean_sd = "xx.xx (xx.xx)")
) %>%
build_table(adsl %>% dplyr::filter(COUNTRY == "CHN")) # countr
basic_table() %>%
split_cols_by(var = "ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "All Patients") %>%
summarize_num_patients(
var = "USUBJID",
#.stats = c("unique","nonunique"),
.labels = c(
unique = "Total number of patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
build_table(df=adae)
basic_table() %>%
split_cols_by(var = "ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "All Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique","nonunique"),
.labels = c(
unique = "Total number of patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
build_table(df=adae)
s_num_patients(x = adae$USUBJID, labelstr = "", .N_col = nrow(adae))
nrow(adae)
basic_table() %>%
split_cols_by(var = "ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "All Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = "unique_count",
.labels = c(unique_count = "Total number of patients with at least one AE")
) %>%
build_table(
df = adae,
alt_counts_df = adsl
)
View(adae$AEBODSYS)
View(adae %>%  dplyr::select(USUBJID,AEBODSYS))
basic_table() %>%
split_cols_by(var = "ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "All Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique", "nonunique"),
.labels = c(
unique = "Total number of patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
split_rows_by(
"AEBODSYS",
child_labels = "visible",
nested = FALSE,
indent_mod = -1L,
split_fun = drop_split_levels()
)
basic_table() %>%
split_cols_by(var = "ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "All Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique", "nonunique"),
.labels = c(
unique = "Total number of patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
split_rows_by(
"AEBODSYS",
child_labels = "visible",
nested = FALSE,
indent_mod = -1L,
split_fun = drop_split_levels()
) %>%
build_table(df=adae,
alt_counts_df = adsl)
basic_table() %>%
split_cols_by(var = "ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "All Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique", "nonunique"),
.labels = c(
unique = "Total number of patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
split_rows_by(
"AEBODSYS",
child_labels = "visible",
nested = FALSE,
indent_mod = -1L,
split_fun = drop_split_levels
) %>%
build_table(df=adae,
alt_counts_df = adsl)
basic_table() %>%
split_cols_by(var = "ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "All Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique", "nonunique"),
.labels = c(
unique = "Total number of patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
split_rows_by(
"AEBODSYS",
child_labels = "visible",
nested = FALSE,
indent_mod = -1L,
split_fun = drop_split_levels
) %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique","nonunique")
) %>%
build_table(df=adae,
alt_counts_df = adsl)
# further analyse the unique adverse events
basic_table() %>%
split_cols_by(var = "ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "All Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique", "nonunique"),
.labels = c(
unique = "Total number of patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
split_rows_by(
"AEBODSYS",
child_labels = "visible",
nested = FALSE,
#indent_mod = -1L,
split_fun = drop_split_levels
) %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique","nonunique")
) %>%
build_table(df=adae,
alt_counts_df = adsl)
basic_table() %>%
split_cols_by(var = "ACTARM") %>%
split_rows_by(
"AEBODSYS",
child_labels = "visible",
nested = FALSE,
#indent_mod = -1L,
split_fun = drop_split_levels
) %>%
add_colcounts() %>%
add_overall_col(label = "All Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique", "nonunique"),
.labels = c(
unique = "Total number of patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
build_table(df=adae,
alt_counts_df = adsl)
View(adae %>% dplyr::select(USUBJID,AEBODSYS,AEDECOD))
View(adae %>% dplyr::select(USUBJID,AEBODSYS,AEDECOD) %>% group_by(AEBODSYS))
View(adae %>% dplyr::select(USUBJID,AEBODSYS,AEDECOD) %>% arrange(AEBODSYS))
basic_table() %>%
split_cols_by("ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "ALL Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique","nonunique"),
.labels = c(
unique = "Total number fo patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
split_rows_by(
"AEBODSYS",
split_fun = drop_split_levels
) %>%
summarize_row_groups() %>%
build_table(df=adae,
alt_counts_df = adsl)
basic_table() %>%
split_cols_by("ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "ALL Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique","nonunique"),
.labels = c(
unique = "Total number fo patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
split_rows_by(
"AEBODSYS"
#split_fun = drop_split_levels
) %>%
summarize_row_groups() %>%
build_table(df=adae,
alt_counts_df = adsl)
basic_table() %>%
split_cols_by("ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "ALL Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique","nonunique"),
.labels = c(
unique = "Total number fo patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
split_rows_by(
"AEBODSYS"
#split_fun = drop_split_levels
) %>%
split_rows_by(
"AEDECOD"
)
summarize_row_groups() %>%
build_table(df=adae,
alt_counts_df = adsl)
basic_table() %>%
split_cols_by("ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "ALL Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique","nonunique"),
.labels = c(
unique = "Total number fo patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
split_rows_by(
"AEBODSYS"
#split_fun = drop_split_levels
) %>%
split_rows_by(
"AEDECOD"
) %>%
summarize_row_groups() %>%
build_table(df=adae,
alt_counts_df = adsl)
basic_table() %>%
split_cols_by("ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "ALL Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique","nonunique"),
.labels = c(
unique = "Total number fo patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
split_rows_by(
"AEBODSYS"
#split_fun = drop_split_levels
) %>%
split_rows_by(
"AEDECOD",
split_fun = drop_split_levels
) %>%
summarize_row_groups() %>%
build_table(df=adae,
alt_counts_df = adsl)
basic_table() %>%
split_cols_by("ACTARM") %>%
add_colcounts() %>%
add_overall_col(label = "ALL Patients") %>%
summarize_num_patients(
var = "USUBJID",
.stats = c("unique","nonunique"),
.labels = c(
unique = "Total number fo patients with at least one AE",
nonunique = "Overall total number of events"
)
) %>%
split_rows_by(
"AEBODSYS"
#split_fun = drop_split_levels
) %>%
summarize_row_groups() %>%
count_occurrences(vars = "AEDECOD") %>%
build_table(df=adae,
alt_counts_df = adsl)
View(adrs)
# preprocessing
anl <- adrs %>%
dplyr::filter(PARAMCD == "BESRSPI") %>%
dplyr::mutate(is_rsp = AVALC %>% c("CR","PR"))
rlang::last_trace()
# preprocessing
anl <- adrs %>%
dplyr::filter(PARAMCD == "BESRSPI") %>%
dplyr::mutate(is_rsp = AVALC %in% c("CR","PR"))
View(anl)
basic_table() %>%
split_cols_by(var = "ARM") %>%
add_colcounts() %>%
estimate_proportion(
vars = "is_rsp",
table_names = "est_prop"
) %>%
build_table(anl)
basic_table() %>%
split_cols_by(var = "ARM", ref_group = "B: Placebo") %>%
add_colcounts() %>%
estimate_proportion(
vars = "is_rsp",
table_names = "est_prop"
) %>%
build_table(anl)
basic_table() %>%
split_cols_by(var = "ARM", ref_group = "B: Placebo") %>%
add_colcounts() %>%
estimate_proportion(
vars = "is_rsp",
table_names = "est_prop",
conf_level = 0.9
) %>%
build_table(anl)
# --
basic_table() %>%
split_cols_by(var = "ARM", ref_group = "B: Placebo") %>%
add_colcounts() %>%
estimate_proportion_diff(
vars = "is_rsp",
conf_level = 0.9
) %>%
build_table(anl)
# --
basic_table() %>%
split_cols_by(var = "ARM",ref_group = "B: Placebo") %>%
add_colcounts() %>%
test_proportion_diff(vars = "is_rsp") %>%
build_table(anl)
library(ggplot2)
ggplot(adsl, aes(x=SEX, fill = ARM)) +
geom_bar()
# Graphs
ggplot(adsl, aes(x=SEX, fill = ARM)) +
geom_bar(position = "dodge")
adsl %>% dplyr::filter(SEX %in% c("M","F")) %>%
ggplot(adsl, aes(x=SEX, fill = ARM)) +
geom_bar(position = "dodge")
adsl %>% dplyr::filter(SEX %in% c("M","F")) %>%
ggplot(aes(x=SEX, fill = ARM)) +
geom_bar(position = "dodge")
ggplot(adsl,aes(x=AGE,fill = ARM)) +
geom_histogram() +
theme_minimal()
ggplot(adsl,aes(x=AGE,fill = ARM)) +
geom_histogram( binwidth = 5) +
theme_minimal()
ggplot(adsl,aes(x=AGE,fill = ARM)) +
geom_histogram( binwidth = 5, alpha = 0.7) +
theme_minimal()
gplot(adsl,aes(x=ARM,y=AGE)) +
geom_boxplot()
ggplot(adsl,aes(x=ARM,y=AGE)) +
geom_boxplot()
ggplot(adsl,aes(x=ARM,y=AGE)) +
geom_boxplot(outlier.colour = "red")
ggplot(adsl,aes(x=ARM,y=AGE)) +
geom_boxplot(outlier.colour = "red") +
labs(
title = "Box plot of age distribution by age",
x = "Treatment Arm",
y = "Age"
)
View(adae)
renv::snapshot()
library(purrr)
numbers <- c(1,2,3,4,5)
#use purrr:map with lambda function to square each number
squared_numbers <- purrr::map(
numbers,
~{
.x ^ 2
}
)
View(squared_numbers)
print(squared_numbers)
square <- function(x){
x^2
}
squared_numbers2 <- map(
numbers,
~ square(.x)
)
print(squared_numbers2)
unique(as.factor(adae$DCSREAS))
table(adae$DCSREAS)
View(adae %>% dplyr::select(USUBJID,TRTSDTM,TRTEDTM,EOSSTT,EOSDT,DCSREAS,DTHDT))
unique(as.factor(EOSSTT))
unique(as.factor(adae$EOSSTT))
adae_ <- adae %>%
dplyr::filter(EOSSTT = "COMPLETED")
adae_ <- adae %>%
dplyr::filter(EOSSTT == "COMPLETED")
unique(as.factor(adae_$EOSSTT))
View(adae_)
View(adae_)
